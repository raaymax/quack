name: Create dev Docker image

on:
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME:  ${{ github.repository }}
  DOCKERHUB_USER: codecat

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:5
        env:
          MONGO_INITDB_ROOT_USERNAME: chat
          MONGO_INITDB_ROOT_PASSWORD: chat
        options: >-
          --health-cmd mongo
          --health-interval 20s
          --health-timeout 10s
          --health-retries 5
        ports:
          - 27017:27017
    env:
      NODE_ENV: 'test'
      DATABASE_URL: 'mongodb://chat:chat@localhost:27017/tests?authSource=admin'
    steps:
    - uses: actions/checkout@v3
    - uses: denoland/setup-deno@v2
      with:
        deno-version: '2.x'
    - run: deno install --allow-scripts
    - run: deno task migrate:tests
    - run: deno task check

  build-image:
    needs: tests
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-${{ github.run_number }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APP_VERSION=build-${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - run: echo '### Output image' >> $GITHUB_STEP_SUMMARY
      - run: echo '```\n${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-${{ github.run_number }}\n```\n' >> $GITHUB_STEP_SUMMARY

      - uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '### Docker image\n\n```\n${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-${{ github.run_number }}\n```\n'
            })
